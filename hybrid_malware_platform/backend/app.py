# backend/app.py
import os
from pathlib import Path
from flask import Flask, render_template, request, redirect, url_for, flash
from config import UPLOAD_FOLDER, SECRET_KEY
from utils.file_utils import safe_save_upload
from utils.logging_utils import setup_logger
from modules.static_analysis import run_static_analysis
import json

# ── Resolve absolute paths ──
BASE_DIR = Path(__file__).resolve().parents[1]           # .../hybrid_malware_platform
BACKEND_DIR = BASE_DIR / "backend"
TEMPLATES_DIR = BASE_DIR / "frontend" / "templates"
STATIC_DIR    = BASE_DIR / "frontend" / "static"

def to_backend_path(p: str) -> Path:
    pth = Path(p)
    return (BACKEND_DIR / pth) if not pth.is_absolute() else pth

UPLOAD_DIR = to_backend_path(UPLOAD_FOLDER)
DB_DIR     = BACKEND_DIR / "database"
LOGS_DIR   = BACKEND_DIR / "logs"

# ── Flask app ──
app = Flask(__name__, template_folder=str(TEMPLATES_DIR), static_folder=str(STATIC_DIR))
app.secret_key = SECRET_KEY

# ── Ensure dirs ──
os.makedirs(UPLOAD_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOGS_DIR, exist_ok=True)

log = setup_logger("app", str(LOGS_DIR))

# ── Routes ──
@app.route("/", methods=["GET"])
def index():
    return render_template("index.html")

@app.route("/upload", methods=["POST"])
def upload():
    f = request.files.get("file")
    if not f:
        flash("No file provided", "error")
        return redirect(url_for("index"))
    try:
        info = safe_save_upload(f, str(UPLOAD_DIR))
        flash(f"Uploaded: {info['orig_name']} → SHA256:{info['sha256'][:12]}…", "success")
        log.info(f"Uploaded {info['orig_name']} sha256={info['sha256']} size={info['size']} mime={info['mime']}")
        return redirect(url_for("detail", sha256=info["sha256"]))
    except Exception as e:
        log.exception("Upload failed")
        flash(str(e), "error")
        return redirect(url_for("index"))

@app.route("/detail/<sha256>", methods=["GET"])
def detail(sha256: str):
    meta_path = UPLOAD_DIR / f"{sha256}.json"
    if not meta_path.exists():
        return "Not found", 404
    with open(meta_path, "r", encoding="utf-8") as f:
        meta = json.load(f)

    static_path = DB_DIR / f"{sha256}.static.json"
    static_data = None
    if static_path.exists():
        with open(static_path, "r", encoding="utf-8") as f:
            static_data = json.load(f)

    return render_template("analysis_result.html", meta=meta, static=static_data)

@app.route("/analyze/static/<sha256>", methods=["POST"])
def analyze_static(sha256: str):
    sample_path = UPLOAD_DIR / sha256
    if not sample_path.exists():
        flash("Sample not found", "error")
        return redirect(url_for("detail", sha256=sha256))
    try:
        info, out = run_static_analysis(str(sample_path), str(DB_DIR))
        flash("Static analysis completed", "success")
        log.info(f"Static analysis for {sha256} -> {out}")
    except Exception as e:
        log.exception("Static analysis failed")
        flash(f"Static analysis failed: {e}", "error")
    return redirect(url_for("detail", sha256=sha256))

if __name__ == "__main__":
    app.run(host="127.0.0.1", port=5000, debug=False, threaded=True)
